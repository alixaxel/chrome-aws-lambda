name: AWS SAM CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  layer:
    name: Lambda Layer
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14.x

    - name: Install Packages
      run: npm install

    - name: Create Lambda Layer
      run: make chrome_aws_lambda.zip

    - name: Upload Layer Artifact
      uses: actions/upload-artifact@v2
      with:
        name: chrome_aws_lambda
        path: chrome_aws_lambda.zip
        retention-days: 1

  # node10:
  #   name: Lambda CI (Node 10.x)
  #   needs: layer
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Setup AWS SAM
  #     uses: aws-actions/setup-sam@v0

  #   - name: Download Layer Artifact
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: chrome_aws_lambda

  #   - name: Provision Layer
  #     run: unzip chrome_aws_lambda.zip -d _/amazon/code

  #   - name: Invoke Lambda
  #     run: sam local invoke --template _/amazon/template.yml --event _/amazon/events/example.com.json node10 2>&1 | (grep 'Error' && exit 1 || exit 0)

  lambda:
    name: Lambda (Node ${{ matrix.node_version }}.x)
    needs: layer
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node_version:
          - 10
          - 12
          - 14
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup AWS SAM
      uses: aws-actions/setup-sam@v0

    - name: Download Layer Artifact
      uses: actions/download-artifact@v2
      with:
        name: chrome_aws_lambda

    - name: Provision Layer
      run: unzip chrome_aws_lambda.zip -d _/amazon/code

    - name: Invoke Lambda
      run: sam local invoke --template _/amazon/template.yml --event _/amazon/events/example.com.json node${{ matrix.node_version }} 2>&1 | (grep 'Error' && exit 1 || exit 0)

  # node12:
  #   needs: layer
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   # - uses: actions/setup-node@v2
  #   #   with:
  #   #     node-version: 12.x
  #   - uses: aws-actions/setup-sam@v0
  #   # - run: npm install
  #   # - run: make chrome_aws_lambda.zip
  #   # - run: unzip chrome_aws_lambda.zip -d _/amazon/code
  #   - run: sam local invoke --template _/amazon/template.yml --event _/amazon/events/example.com.json node12 2>&1 | (grep 'Error' && exit 1 || exit 0)

  # node14:
  #   needs: layer
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   # - uses: actions/setup-node@v2
  #   #   with:
  #   #     node-version: 14.x
  #   - uses: aws-actions/setup-sam@v0
  #   # - run: npm install
  #   # - run: make chrome_aws_lambda.zip
  #   # - run: unzip chrome_aws_lambda.zip -d _/amazon/code
  #   - run: sam local invoke --template _/amazon/template.yml --event _/amazon/events/example.com.json node14 2>&1 | (grep 'Error' && exit 1 || exit 0)
